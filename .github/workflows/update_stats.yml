name: 更新代码统计

on:
  push:
    branches:
      - "*"

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: 安装 cloc
        run: sudo apt-get install -y cloc

      - name: 统计代码行数
        id: cloc
        run: |
          # 生成统计数据，排除指定的文件和目录
          STATS=$(cloc . --exclude-dir=vendor,node_modules,docs,tmp --exclude-ext=mod,sum --not-match-f="LICENSE|.gitignore|.dockerignore|README.md|README_en.md" --json)

          # 输出统计结果以便调试
          echo "统计结果: $STATS"

          # 提取各语言数据
          GO_FILES=$(echo "$STATS" | jq -r '.Go.nFiles // 0')
          GO_CODE=$(echo "$STATS" | jq -r '.Go.code // 0')
          GO_COMMENT=$(echo "$STATS" | jq -r '.Go.comment // 0')
          GO_BLANK=$(echo "$STATS" | jq -r '.Go.blank // 0')

          DOCKER_FILES=$(echo "$STATS" | jq -r '.Dockerfile.nFiles // 0')
          DOCKER_CODE=$(echo "$STATS" | jq -r '.Dockerfile.code // 0')
          DOCKER_COMMENT=$(echo "$STATS" | jq -r '.Dockerfile.comment // 0')
          DOCKER_BLANK=$(echo "$STATS" | jq -r '.Dockerfile.blank // 0')

          YAML_FILES=$(echo "$STATS" | jq -r '.YAML.nFiles // 0')
          YAML_CODE=$(echo "$STATS" | jq -r '.YAML.code // 0')
          YAML_COMMENT=$(echo "$STATS" | jq -r '.YAML.comment // 0')
          YAML_BLANK=$(echo "$STATS" | jq -r '.YAML.blank // 0')

          # 尝试获取 Markdown 数据
          MD_FILES=$(echo "$STATS" | jq -r '.Markdown.nFiles // 0')
          MD_CODE=$(echo "$STATS" | jq -r '.Markdown.code // 0')
          MD_COMMENT=$(echo "$STATS" | jq -r '.Markdown.comment // 0')
          MD_BLANK=$(echo "$STATS" | jq -r '.Markdown.blank // 0')

          # 计算其他语言
          TOTAL_FILES=$(echo "$STATS" | jq -r '.SUM.nFiles // 0')
          TOTAL_CODE=$(echo "$STATS" | jq -r '.SUM.code // 0')
          TOTAL_COMMENT=$(echo "$STATS" | jq -r '.SUM.comment // 0')
          TOTAL_BLANK=$(echo "$STATS" | jq -r '.SUM.blank // 0')

          OTHER_FILES=$((TOTAL_FILES - GO_FILES - DOCKER_FILES - YAML_FILES - MD_FILES))
          OTHER_CODE=$((TOTAL_CODE - GO_CODE - DOCKER_CODE - YAML_CODE - MD_CODE))
          OTHER_COMMENT=$((TOTAL_COMMENT - GO_COMMENT - DOCKER_COMMENT - YAML_COMMENT - MD_COMMENT))
          OTHER_BLANK=$((TOTAL_BLANK - GO_BLANK - DOCKER_BLANK - YAML_BLANK - MD_BLANK))

          # 计算百分比（避免除以零错误）
          if [ "$TOTAL_CODE" -eq "0" ] || [ "$TOTAL_CODE" = "null" ]; then
            GO_PERCENT="0.0%"
            DOCKER_PERCENT="0.0%"
            YAML_PERCENT="0.0%"
            MD_PERCENT="0.0%"
            OTHER_PERCENT="0.0%"
          else
            GO_PERCENT=$(awk "BEGIN {printf \"%.1f%%\", ($GO_CODE / $TOTAL_CODE) * 100}")
            DOCKER_PERCENT=$(awk "BEGIN {printf \"%.1f%%\", ($DOCKER_CODE / $TOTAL_CODE) * 100}")
            YAML_PERCENT=$(awk "BEGIN {printf \"%.1f%%\", ($YAML_CODE / $TOTAL_CODE) * 100}")
            MD_PERCENT=$(awk "BEGIN {printf \"%.1f%%\", ($MD_CODE / $TOTAL_CODE) * 100}")
            OTHER_PERCENT=$(awk "BEGIN {printf \"%.1f%%\", ($OTHER_CODE / $TOTAL_CODE) * 100}")
          fi

          # 获取当前日期
          CURRENT_DATE=$(date +"%Y-%m-%d")

          # 使用 echo 命令直接创建表格内容，避免 YAML 解析问题
          echo '| 语言 | 文件数 | 代码行数 | 注释行数 | 空白行数 | 占比 |' > stats_table.md
          echo '|:----:|:------:|:--------:|:--------:|:--------:|:----:|' >> stats_table.md
          echo "| Go | $GO_FILES | $GO_CODE | $GO_COMMENT | $GO_BLANK | $GO_PERCENT |" >> stats_table.md
          echo "| Docker | $DOCKER_FILES | $DOCKER_CODE | $DOCKER_COMMENT | $DOCKER_BLANK | $DOCKER_PERCENT |" >> stats_table.md
          echo "| YAML | $YAML_FILES | $YAML_CODE | $YAML_COMMENT | $YAML_BLANK | $YAML_PERCENT |" >> stats_table.md
          echo "| Markdown | $MD_FILES | $MD_CODE | $MD_COMMENT | $MD_BLANK | $MD_PERCENT |" >> stats_table.md
          echo "| 其他 | $OTHER_FILES | $OTHER_CODE | $OTHER_COMMENT | $OTHER_BLANK | $OTHER_PERCENT |" >> stats_table.md
          echo "| **总计** | **$TOTAL_FILES** | **$TOTAL_CODE** | **$TOTAL_COMMENT** | **$TOTAL_BLANK** | **100%** |" >> stats_table.md
          echo "" >> stats_table.md
          echo "*注：统计数据由 GitHub Actions 自动更新，最后更新于 $CURRENT_DATE*" >> stats_table.md
          echo "*排除了 docs、tmp 目录和 go.mod、go.sum、LICENSE、.gitignore、.dockerignore、README.md、README_en.md 文件*" >> stats_table.md

          # 创建英文表格内容
          echo '| Language | Files | Code Lines | Comment Lines | Blank Lines | Percentage |' > stats_table_en.md
          echo '|:--------:|:-----:|:----------:|:-------------:|:-----------:|:----------:|' >> stats_table_en.md
          echo "| Go | $GO_FILES | $GO_CODE | $GO_COMMENT | $GO_BLANK | $GO_PERCENT |" >> stats_table_en.md
          echo "| Docker | $DOCKER_FILES | $DOCKER_CODE | $DOCKER_COMMENT | $DOCKER_BLANK | $DOCKER_PERCENT |" >> stats_table_en.md
          echo "| YAML | $YAML_FILES | $YAML_CODE | $YAML_COMMENT | $YAML_BLANK | $YAML_PERCENT |" >> stats_table_en.md
          echo "| Markdown | $MD_FILES | $MD_CODE | $MD_COMMENT | $MD_BLANK | $MD_PERCENT |" >> stats_table_en.md
          echo "| Others | $OTHER_FILES | $OTHER_CODE | $OTHER_COMMENT | $OTHER_BLANK | $OTHER_PERCENT |" >> stats_table_en.md
          echo "| **Total** | **$TOTAL_FILES** | **$TOTAL_CODE** | **$TOTAL_COMMENT** | **$TOTAL_BLANK** | **100%** |" >> stats_table_en.md
          echo "" >> stats_table_en.md
          echo "*Note: Statistics are automatically updated by GitHub Actions, last updated on $CURRENT_DATE*" >> stats_table_en.md
          echo "*Excluded docs, tmp directories and go.mod, go.sum, LICENSE, .gitignore, .dockerignore, README.md, README_en.md files*" >> stats_table_en.md

          # 更新中文 README - 使用 sed 进行更简单的替换
          if grep -q "### 详细统计" README.md; then
            # 如果存在"详细统计"标题，则替换该部分内容
            sed -i '/### 详细统计/,/^## /{ /### 详细统计/!{ /^## /!d; }; }' README.md
            sed -i '/### 详细统计/r stats_table.md' README.md
          else
            # 如果不存在，则在文件末尾添加
            echo -e "\n### 详细统计" >> README.md
            cat stats_table.md >> README.md
          fi

          # 更新英文 README
          if grep -q "### Detailed Statistics" README_en.md; then
            # 如果存在"Detailed Statistics"标题，则替换该部分内容
            sed -i '/### Detailed Statistics/,/^## /{ /### Detailed Statistics/!{ /^## /!d; }; }' README_en.md
            sed -i '/### Detailed Statistics/r stats_table_en.md' README_en.md
          else
            # 如果不存在，则在文件末尾添加
            echo -e "\n### Detailed Statistics" >> README_en.md
            cat stats_table_en.md >> README_en.md
          fi

          # 清理临时文件
          rm stats_table.md stats_table_en.md

      - name: 提交更改
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

          # 检查是否有更改
          if git diff --quiet README.md README_en.md; then
            echo "没有变更需要提交"
            exit 0
          fi

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md README_en.md
          git commit -m "chore(docs): 更新代码统计报告 [分支: $BRANCH_NAME] [skip ci]"
          git push origin $BRANCH_NAME
