user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志配置
    log_format main '$remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    client_max_body_size 100M;
    server_tokens off;

    # 使用Docker内置DNS
    resolver 127.0.0.11 valid=30s ipv6=on;

    # WebSocket支持
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # HTTP 监听，重定向到 HTTPS
    server {
        listen 80;
        server_name jank.org.cn www.jank.org.cn;
        return 301 https://$host$request_uri;
    }

    # HTTPS 监听，启用 SSL 配置
    server {
        listen 443 ssl;
        server_name jank.org.cn www.jank.org.cn;

        ssl_certificate /etc/ssl/jank.org.cn.pem;
        ssl_certificate_key /etc/ssl/jank.org.cn.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # 通用头部
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # API 转发到后端
        location /api/ {
            set $backend_upstream "http://app:9010";
            proxy_pass $backend_upstream;
        }

        # Swagger UI 文档
        location /swagger/ {
            set $backend_upstream "http://app:9010";
            rewrite ^/swagger/(.*)$ /swagger/$1 break;
            proxy_pass $backend_upstream;
            proxy_redirect off;
            proxy_buffering off;
        }

        # 前端应用转发
        location / {
            set $frontend_upstream "http://frontend:3000";
            proxy_pass $frontend_upstream;
        }
    }

    # 默认服务器，拒绝访问
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }
}
