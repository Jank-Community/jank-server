version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_DB=jank_db
      - POSTGRES_USER=<DATABASE_USER>
      - POSTGRES_PASSWORD=<DATABASE_PASSWORD>
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "<DATABASE_USER>", "-d", "jank_db"]
      interval: 30s
      timeout: 10s
      retries: 30
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jank_blog_network

  redis:
    image: redis:7.0
    container_name: redis_db
    restart: unless-stopped
    command: redis-server --save ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - jank_blog_network

  minio:
    image: minio/minio:latest
    container_name: minio_server
    restart: always
    environment:
      - MINIO_ROOT_USER=<MINIO_ROOT_USER>
      - MINIO_ROOT_PASSWORD=<MINIO_ROOT_PASSWORD>
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - minio_data:/data
      - ./scripts/minio:/docker-entrypoint-initdb.d
    networks:
      - jank_blog_network
    ports:
      - "9000:9000"
      - "9001:9001"

  app:
    build: .
    container_name: app
    restart: always
    ports:
      - "9010:9010"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9010/ || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - ./configs:/app/configs
      - ./.logs:/app/.logs
    networks:
      - jank_blog_network

  nginx:
    image: nginx:1.24.0
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - jank_blog_network
    command: >
      bash -c "mkdir -p /var/cache/nginx/proxy_cache &&
              chown -R nginx:nginx /var/cache/nginx &&
              nginx -g 'daemon off;'"
    depends_on:
      - app

networks:
  jank_blog_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
